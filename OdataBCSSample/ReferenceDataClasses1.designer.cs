#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OdataBCSSample
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ReferenceData")]
	public partial class ReferenceDataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRecl_BRstatus(Recl_BRstatus instance);
    partial void UpdateRecl_BRstatus(Recl_BRstatus instance);
    partial void DeleteRecl_BRstatus(Recl_BRstatus instance);
    #endregion
		
		public ReferenceDataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReferenceDataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReferenceDataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReferenceDataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Recl_BRstatus> Recl_BRstatus
		{
			get
			{
				return this.GetTable<Recl_BRstatus>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recl_BRstatus")]
	public partial class Recl_BRstatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BlockID;
		
		private System.Nullable<byte> _Phase;
		
		private string _BRstatus;
		
		private System.Nullable<System.DateTime> _DateInitiated;
		
		private System.Nullable<System.DateTime> _DateApproved;
		
		private string _Notes;
		
		private int _ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlockIDChanging(string value);
    partial void OnBlockIDChanged();
    partial void OnPhaseChanging(System.Nullable<byte> value);
    partial void OnPhaseChanged();
    partial void OnBRstatusChanging(string value);
    partial void OnBRstatusChanged();
    partial void OnDateInitiatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInitiatedChanged();
    partial void OnDateApprovedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateApprovedChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public Recl_BRstatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BlockID
		{
			get
			{
				return this._BlockID;
			}
			set
			{
				if ((this._BlockID != value))
				{
					this.OnBlockIDChanging(value);
					this.SendPropertyChanging();
					this._BlockID = value;
					this.SendPropertyChanged("BlockID");
					this.OnBlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phase", DbType="TinyInt")]
		public System.Nullable<byte> Phase
		{
			get
			{
				return this._Phase;
			}
			set
			{
				if ((this._Phase != value))
				{
					this.OnPhaseChanging(value);
					this.SendPropertyChanging();
					this._Phase = value;
					this.SendPropertyChanged("Phase");
					this.OnPhaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRstatus", DbType="VarChar(50)")]
		public string BRstatus
		{
			get
			{
				return this._BRstatus;
			}
			set
			{
				if ((this._BRstatus != value))
				{
					this.OnBRstatusChanging(value);
					this.SendPropertyChanging();
					this._BRstatus = value;
					this.SendPropertyChanged("BRstatus");
					this.OnBRstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInitiated", DbType="Date")]
		public System.Nullable<System.DateTime> DateInitiated
		{
			get
			{
				return this._DateInitiated;
			}
			set
			{
				if ((this._DateInitiated != value))
				{
					this.OnDateInitiatedChanging(value);
					this.SendPropertyChanging();
					this._DateInitiated = value;
					this.SendPropertyChanged("DateInitiated");
					this.OnDateInitiatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateApproved", DbType="Date")]
		public System.Nullable<System.DateTime> DateApproved
		{
			get
			{
				return this._DateApproved;
			}
			set
			{
				if ((this._DateApproved != value))
				{
					this.OnDateApprovedChanging(value);
					this.SendPropertyChanging();
					this._DateApproved = value;
					this.SendPropertyChanged("DateApproved");
					this.OnDateApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
